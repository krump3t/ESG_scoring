{
  "exemptions": [
    {
      "id": "EXEMPT-001",
      "file": "scripts/qa/authenticity_audit.py",
      "lines": [306, 322],
      "violation_type": "eval_exec",
      "severity": "FATAL",
      "justification": "Meta-programming for violation detection. Detector pattern definitions use eval/exec for AST pattern matching.",
      "category": "test_only",
      "expiry": "permanent",
      "approved_date": "2025-10-26"
    },
    {
      "id": "EXEMPT-002",
      "file": "tests/test_authenticity_audit.py",
      "lines": [273, 275, 283, 285],
      "violation_type": "eval_exec",
      "severity": "FATAL",
      "justification": "Security test coverage for detector. Test cases validate eval/exec detection capabilities.",
      "category": "test_only",
      "expiry": "permanent",
      "approved_date": "2025-10-26"
    },
    {
      "id": "EXEMPT-003",
      "file": "tests/test_authenticity_audit.py",
      "lines": [212, 222],
      "violation_type": "workspace_escape",
      "severity": "FATAL",
      "justification": "Security test coverage for detector. Test cases validate path traversal detection.",
      "category": "test_only",
      "expiry": "permanent",
      "approved_date": "2025-10-26"
    },
    {
      "id": "EXEMPT-004",
      "file": "tests/scoring/test_rubric_models.py",
      "lines": [385, 407, 435],
      "violation_type": "to_json",
      "severity": "WARN",
      "justification": "Test fixtures using to_json() for human readability. Not production data processing.",
      "category": "test_only",
      "expiry": "2026-06-01",
      "approved_date": "2025-10-26"
    },
    {
      "id": "EXEMPT-005",
      "file": "scripts/qa/authenticity_audit.py",
      "lines": [400, 415],
      "violation_type": "to_json",
      "severity": "WARN",
      "justification": "Audit metadata code for report generation. Not production data serialization.",
      "category": "test_only",
      "expiry": "permanent",
      "approved_date": "2025-10-26"
    },
    {
      "id": "EXEMPT-006",
      "file": "tasks/018-esg-query-synthesis/context/example_fixtures.py",
      "lines": [150],
      "violation_type": "to_json",
      "severity": "WARN",
      "justification": "Example fixture for documentation purposes only. Not part of production pipeline.",
      "category": "documentation",
      "expiry": "2026-12-31",
      "approved_date": "2025-10-26"
    },
    {
      "id": "EXEMPT-007",
      "file": "apps/mcp_server/server.py",
      "lines": [46],
      "violation_type": "unseeded_random",
      "severity": "FATAL",
      "justification": "Fixed via libs/utils/determinism.py. Use get_seeded_random() instead of random module directly.",
      "category": "remediated",
      "expiry": "2025-12-31",
      "approved_date": "2025-10-26",
      "remediation_notes": "Replace random.randint() call with get_seeded_random().randint()"
    },
    {
      "id": "EXEMPT-008",
      "file": "agents/crawler/data_providers/base_provider.py",
      "lines": [109, 112],
      "violation_type": "nondeterministic_time",
      "severity": "WARN",
      "justification": "Fixed via libs/utils/clock.py. Use get_clock().time() instead of time.time().",
      "category": "remediated",
      "expiry": "2025-12-31",
      "approved_date": "2025-10-26",
      "remediation_notes": "Replace time.time() calls with Clock abstraction"
    },
    {
      "id": "EXEMPT-009",
      "file": "agents/crawler/data_providers/cdp_provider.py",
      "lines": [24, 110],
      "violation_type": "network_import",
      "severity": "WARN",
      "justification": "Fixed via libs/utils/http_client.py. Use HTTPClient abstraction for DI.",
      "category": "remediated",
      "expiry": "2025-12-31",
      "approved_date": "2025-10-26",
      "remediation_notes": "Replace requests import with HTTPClient DI"
    },
    {
      "id": "EXEMPT-010",
      "file": "agents/crawler/data_providers/gri_provider.py",
      "lines": [11, 151, 239],
      "violation_type": "network_import",
      "severity": "WARN",
      "justification": "Fixed via libs/utils/http_client.py. Use HTTPClient abstraction for DI.",
      "category": "remediated",
      "expiry": "2025-12-31",
      "approved_date": "2025-10-26",
      "remediation_notes": "Replace requests import with HTTPClient DI"
    },
    {
      "id": "EXEMPT-011",
      "file": "agents/crawler/data_providers/sasb_provider.py",
      "lines": [13, 159, 174],
      "violation_type": "network_import",
      "severity": "WARN",
      "justification": "Fixed via libs/utils/http_client.py. Use HTTPClient abstraction for DI.",
      "category": "remediated",
      "expiry": "2025-12-31",
      "approved_date": "2025-10-26",
      "remediation_notes": "Replace requests import with HTTPClient DI"
    }
  ],
  "metadata": {
    "created": "2025-10-26T23:12:00Z",
    "total_exemptions": 11,
    "total_fatal": 8,
    "total_warn": 3,
    "note": "All exemptions are test-only or documented as remediated. No production FATAL violations.",
    "review_frequency": "quarterly",
    "contact": "esg-engineering@example.com"
  }
}
