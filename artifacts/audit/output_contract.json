{
  "phase0": {
    "cp_files": [
      "agents/__init__.py",
      "agents/batch/__init__.py",
      "agents/batch/batch_processor.py",
      "agents/crawler/__init__.py",
      "agents/crawler/data_providers/__init__.py",
      "agents/crawler/data_providers/base_provider.py",
      "agents/crawler/data_providers/cdp_provider.py",
      "agents/crawler/data_providers/exceptions.py",
      "agents/crawler/data_providers/gri_provider.py",
      "agents/crawler/data_providers/sasb_provider.py",
      "agents/crawler/data_providers/sec_edgar_provider.py",
      "agents/crawler/data_providers/sec_edgar_provider_legacy.py",
      "agents/crawler/data_providers/ticker_lookup.py",
      "agents/crawler/extractors/__init__.py",
      "agents/crawler/extractors/cdp_extractor.py",
      "agents/crawler/extractors/enhanced_pdf_extractor.py",
      "agents/crawler/extractors/pdf_extractor.py",
      "agents/crawler/extractors/sec_edgar_extractor.py",
      "agents/crawler/ledger.py",
      "agents/crawler/mcp_crawler.py",
      "agents/crawler/multi_source_crawler.py",
      "agents/crawler/multi_source_crawler_v2.py",
      "agents/crawler/sustainability_reports_crawler.py",
      "agents/crawler/writers/__init__.py",
      "agents/crawler/writers/parquet_writer.py",
      "agents/embedding/__init__.py",
      "agents/embedding/watsonx_embedder.py",
      "agents/extraction/__init__.py",
      "agents/extraction/extraction_router.py",
      "agents/extraction/llm_extractor.py",
      "agents/extraction/pdf_text_extractor.py",
      "agents/extraction/structured_extractor.py",
      "agents/normalizer/__init__.py",
      "agents/normalizer/mcp_normalizer.py",
      "agents/parser/__init__.py",
      "agents/parser/evidence_extractor.py",
      "agents/parser/html_parser.py",
      "agents/parser/matchers/__init__.py",
      "agents/parser/matchers/base_matcher.py",
      "agents/parser/matchers/ghg_matcher.py",
      "agents/parser/models.py",
      "agents/query/__init__.py",
      "agents/query/cache_manager.py",
      "agents/query/orchestrator.py",
      "agents/query/query_parser.py",
      "agents/retrieval/__init__.py",
      "agents/retrieval/parquet_retriever.py",
      "agents/scoring/__init__.py",
      "agents/scoring/characteristic_matcher.py",
      "agents/scoring/evidence_aggregator.py",
      "agents/scoring/evidence_table_generator.py",
      "agents/scoring/mcp_scoring.py",
      "agents/scoring/parity_validator.py",
      "agents/scoring/rubric_loader.py",
      "agents/scoring/rubric_models.py",
      "agents/scoring/rubric_scorer.py",
      "agents/scoring/rubric_v3_scorer.py",
      "agents/storage/bronze_writer.py",
      "agents/storage/duckdb_manager.py",
      "agents/storage/silver_normalizer.py",
      "apps/__init__.py",
      "apps/api/__init__.py",
      "apps/api/health.py",
      "apps/api/logging_config.py",
      "apps/api/main.py",
      "apps/api/metrics.py",
      "apps/api/telemetry.py",
      "apps/evaluation/response_quality.py",
      "apps/index/__init__.py",
      "apps/index/graph_index.py",
      "apps/index/graph_store.py",
      "apps/index/ontology.py",
      "apps/index/retriever.py",
      "apps/index/vector_store.py",
      "apps/ingestion/crawler.py",
      "apps/ingestion/parser.py",
      "apps/ingestion/report_fetcher.py",
      "apps/ingestion/validator.py",
      "apps/integration_validator.py",
      "apps/mcp_server/server.py",
      "apps/pipeline/__init__.py",
      "apps/pipeline/demo_flow.py",
      "apps/pipeline/score_flow.py",
      "apps/pipeline/theme_adapter.py",
      "apps/pipeline_orchestrator.py",
      "apps/rubric/__init__.py",
      "apps/rubric/integrate_gate.py",
      "apps/rubric/loader.py",
      "apps/scoring/__init__.py",
      "apps/scoring/grade.py",
      "apps/scoring/pipeline.py",
      "apps/scoring/rubric_v3_loader.py",
      "apps/scoring/scorer.py",
      "apps/scoring/watsonx_client.py",
      "apps/scoring/wx_client.py",
      "apps/utils/__init__.py",
      "apps/utils/provenance.py",
      "libs/__init__.py",
      "libs/analytics/__init__.py",
      "libs/analytics/duck.py",
      "libs/analytics/prefilter.py",
      "libs/cache/real_redis_cache.py",
      "libs/cache/redis_cache.py",
      "libs/config/__init__.py",
      "libs/config/integration_flags.py",
      "libs/contracts/__init__.py",
      "libs/contracts/extraction_contracts.py",
      "libs/contracts/ingestion_contracts.py",
      "libs/data/schemas.py",
      "libs/data_lake/__init__.py",
      "libs/data_lake/duckdb_reader.py",
      "libs/data_lake/parquet_writer.py",
      "libs/embedding/deterministic_embedder.py",
      "libs/embedding/watsonx_embedder.py",
      "libs/llm/watsonx_client.py",
      "libs/llm/watsonx_client_improved.py",
      "libs/models/esg_metrics.py",
      "libs/qa/__init__.py",
      "libs/qa/tee.py",
      "libs/query/__init__.py",
      "libs/query/query_synthesizer.py",
      "libs/ranking/__init__.py",
      "libs/ranking/cross_encoder.py",
      "libs/ranking/cross_encoder_ranker.py",
      "libs/ranking/hybrid.py",
      "libs/ranking/lexical.py",
      "libs/ranking/real_cross_encoder.py",
      "libs/retrieval/__init__.py",
      "libs/retrieval/embeddings/__init__.py",
      "libs/retrieval/embeddings/deterministic_embedder.py",
      "libs/retrieval/embeddings/factory.py",
      "libs/retrieval/embeddings/watsonx_embedder.py",
      "libs/retrieval/hybrid_retriever.py",
      "libs/retrieval/hybrid_semantic.py",
      "libs/retrieval/parity_checker.py",
      "libs/retrieval/parquet_retriever.py",
      "libs/retrieval/semantic_retriever.py",
      "libs/retrieval/vector_backends/__init__.py",
      "libs/retrieval/vector_backends/astradb_store.py",
      "libs/retrieval/vector_backends/factory.py",
      "libs/retrieval/vector_index.py",
      "libs/scoring/__init__.py",
      "libs/scoring/bayesian_confidence.py",
      "libs/scoring/evidence_gate.py",
      "libs/storage/astradb_graph.py",
      "libs/storage/astradb_vector.py",
      "libs/utils/__init__.py",
      "libs/utils/clock.py",
      "libs/utils/determinism.py",
      "libs/utils/env.py",
      "libs/utils/http_client.py",
      "libs/utils/io.py",
      "libs/utils/trace.py",
      "src/__init__.py",
      "src/probe.py"
    ]
  },
  "phase1": {
    "phase_1_authenticity": {
      "status": "PASS",
      "violations_placeholders": [],
      "violations_mocks_stubs": []
    }
  },
  "phase2": {
    "phase_2_tdd_guard": {
      "status": "PASS",
      "missing_test_files": [],
      "tdd_gate_verification": []
    }
  },
  "phase3": {
    "phase_3_quality_gates": {
      "status": "PASS",
      "violations_type_safety": [],
      "violations_documentation": [],
      "violations_complexity": []
    }
  },
  "phase4": {
    "phase_4_consistency": {
      "status": "PASS",
      "missing_layout_components": [],
      "naming_violations": [],
      "documentation_misalignment": []
    }
  },
  "phase5": {
    "phase_5_e2e_readiness": {
      "criteria_1_authenticity": "PASS",
      "criteria_2_rigor": "PASS",
      "criteria_3_quality": "PASS",
      "criteria_4_consistency": "PASS",
      "criteria_5_traceability_infra": "PASS",
      "criteria_6_authentic_entrypoint": "PASS",
      "e2e_demo_status": "READY",
      "blockers_summary": []
    }
  }
}