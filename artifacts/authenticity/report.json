{
  "agent": "SCA",
  "protocol_version": "13.8",
  "audit_type": "authenticity",
  "timestamp": "2025-10-27T06:38:08.781685Z",
  "git_commit": "unknown",
  "root_path": "C:\\projects\\Work Projects\\ibm-projects\\ESG Evaluation\\prospecting-engine",
  "status": "ok",
  "summary": {
    "total_violations": 34,
    "fatal": 0,
    "warn": 34,
    "detectors_run": 8
  },
  "violations": [
    {
      "file": "agents\\scoring\\rubric_models.py",
      "line": 183,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "def to_json(self, output_path: Path) -> None:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "apps\\integration_validator.py",
      "line": 110,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except Exception as e:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "apps\\integration_validator.py",
      "line": 188,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except Exception as e:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "apps\\integration_validator.py",
      "line": 278,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except Exception as e:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "apps\\integration_validator.py",
      "line": 327,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except Exception as e:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "apps\\mcp_server\\server.py",
      "line": 30,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "ok = compile_md_to_json(md, out_json)",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "libs\\utils\\determinism.py",
      "line": 89,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except ImportError:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "rubrics\\archive\\compile_rubric.py",
      "line": 4,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "def compile_md_to_json(md_path: Path, out_json: Path):",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "rubrics\\archive\\compile_rubric.py",
      "line": 20,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "if not compile_md_to_json(md, out_json):",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "scripts\\load_embeddings_to_astradb.py",
      "line": 171,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except Exception:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "scripts\\qa\\authenticity_audit.py",
      "line": 255,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "\"\"\"Flag to_json() where to_parquet() expected\"\"\"",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "scripts\\qa\\authenticity_audit.py",
      "line": 266,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "if \"to_json(\" in line and (\"artifacts\" in content or \"maturity\" in content):",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "scripts\\qa\\authenticity_audit.py",
      "line": 271,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "description=\"to_json() used for data artifact - should use to_parquet()\",",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\authenticity\\test_clock_cp.py",
      "line": 139,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except ValueError:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\authenticity\\test_http_cp.py",
      "line": 50,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except KeyError:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\authenticity\\test_ingestion_authenticity_cp.py",
      "line": 168,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except json.JSONDecodeError:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\conftest.py",
      "line": 34,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except Exception:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\conftest.py",
      "line": 36,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except Exception:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\crawler\\test_sec_edgar_provider_enhanced.py",
      "line": 488,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except DocumentNotFoundError:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\scoring\\test_rubric_loader.py",
      "line": 206,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "def test_cache_rubric_to_json(",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\scoring\\test_rubric_models.py",
      "line": 385,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "def test_maturity_rubric_to_json(self, tmp_path) -> None:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\scoring\\test_rubric_models.py",
      "line": 407,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "rubric.to_json(json_path)",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\scoring\\test_rubric_models.py",
      "line": 435,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "original_rubric.to_json(json_path)",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_authenticity_audit.py",
      "line": 180,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "\"\"\"Should detect to_json() in artifact-related code\"\"\"",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_authenticity_audit.py",
      "line": 184,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "df.to_json(\"results.json\")",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_authenticity_audit.py",
      "line": 194,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "\"\"\"Should allow to_json() in non-artifact contexts\"\"\"",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_authenticity_audit.py",
      "line": 196,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "test_file.write_text('response = df.to_json(orient=\"records\")\\n')",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_authenticity_audit.py",
      "line": 240,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except Exception:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_mcp_normalizer.py",
      "line": 113,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except Exception:",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_naming_api_cp.py",
      "line": 230,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except (ImportError, AssertionError):",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_naming_api_cp.py",
      "line": 237,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except (ImportError, AssertionError):",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_naming_api_cp.py",
      "line": 244,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except (ImportError, AssertionError):",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_naming_api_cp.py",
      "line": 251,
      "violation_type": "silent_exception",
      "description": "Except block with pass - silently swallows errors",
      "code_snippet": "except (ImportError, AssertionError):",
      "severity": "WARN",
      "exemption": null
    },
    {
      "file": "tests\\test_phase_5_7_remediation.py",
      "line": 40,
      "violation_type": "json_as_parquet",
      "description": "to_json() used for data artifact - should use to_parquet()",
      "code_snippet": "\"\"\"Test pattern: replace to_json() with to_parquet()\"\"\"",
      "severity": "WARN",
      "exemption": null
    }
  ],
  "determinism": {
    "determinism": false,
    "runs": 2,
    "hashes_per_run": {},
    "differences": []
  },
  "detectors": [
    {
      "name": "network_imports",
      "fatal_count": 0,
      "warn_count": 0
    },
    {
      "name": "unseeded_random",
      "fatal_count": 0,
      "warn_count": 0
    },
    {
      "name": "nondeterministic_time",
      "fatal_count": 0,
      "warn_count": 0
    },
    {
      "name": "json_as_parquet",
      "fatal_count": 0,
      "warn_count": 16
    },
    {
      "name": "workspace_escape",
      "fatal_count": 0,
      "warn_count": 0
    },
    {
      "name": "silent_exceptions",
      "fatal_count": 0,
      "warn_count": 18
    },
    {
      "name": "eval_exec",
      "fatal_count": 0,
      "warn_count": 0
    },
    {
      "name": "nondeterministic_ordering",
      "fatal_count": 0,
      "warn_count": 0
    }
  ]
}