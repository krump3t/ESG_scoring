{
  "task_id": "016-production-integration-phase1",
  "phase": "1",
  "data_sources_type": "configuration_files",
  "sources": [
    {
      "source_id": "DS001",
      "name": "requirements.txt",
      "type": "dependency_manifest",
      "location": "C:\\projects\\Work Projects\\ibm-projects\\ESG Evaluation\\prospecting-engine\\requirements.txt",
      "size_estimate": "15 KB",
      "format": "text/plain",
      "sha256": null,
      "description": "Python dependency manifest with production packages (ibm-watsonx-ai, cassandra-driver, duckdb, apache-airflow, pyngrok, redis, python-dotenv)",
      "pii_flag": false,
      "retention_period": "permanent",
      "provenance": "Generated by pip freeze; manually curated for production dependencies",
      "access_controls": "public (no secrets)",
      "update_frequency": "on_dependency_change"
    },
    {
      "source_id": "DS002",
      "name": "docker-compose.yml",
      "type": "infrastructure_config",
      "location": "C:\\projects\\Work Projects\\ibm-projects\\ESG Evaluation\\prospecting-engine\\infrastructure\\docker-compose.yml",
      "size_estimate": "5 KB",
      "format": "yaml",
      "sha256": null,
      "description": "Docker Compose service definitions for 9 services (postgres, redis, minio, iceberg-rest, trino, airflow-webserver, airflow-scheduler, mcp-server, ngrok)",
      "pii_flag": false,
      "retention_period": "permanent",
      "provenance": "Extended from existing docker-compose.yml (Phase 4); added 6 new services",
      "access_controls": "public (no secrets in compose file)",
      "update_frequency": "on_architecture_change"
    },
    {
      "source_id": "DS003",
      "name": ".env.production",
      "type": "secrets_config",
      "location": "C:\\projects\\Work Projects\\ibm-projects\\ESG Evaluation\\prospecting-engine\\.env.production",
      "size_estimate": "2 KB",
      "format": "text/plain",
      "sha256": null,
      "description": "Production environment variables with IBM watsonx.ai API key, AstraDB token, ngrok auth token, MCP API key, Airflow Fernet key",
      "pii_flag": true,
      "retention_period": "90_days",
      "provenance": "Manually created from .env.production.example template; contains sensitive credentials",
      "access_controls": "private (git-ignored, local only)",
      "update_frequency": "on_credential_rotation",
      "security_notes": [
        "NEVER commit .env.production to version control",
        "Rotate API keys every 90 days",
        "Use IBM Cloud Secrets Manager for production deployment",
        "MCP_API_KEY generated via: python -c 'import secrets; print(secrets.token_hex(16))'",
        "AIRFLOW_FERNET_KEY generated via: python -c 'from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())'"
      ]
    },
    {
      "source_id": "DS004",
      "name": "Dockerfile.airflow",
      "type": "container_image_config",
      "location": "C:\\projects\\Work Projects\\ibm-projects\\ESG Evaluation\\prospecting-engine\\infrastructure\\Dockerfile.airflow",
      "size_estimate": "1 KB",
      "format": "dockerfile",
      "sha256": null,
      "description": "Airflow webserver/scheduler container image with apache-airflow==2.7.3 base and project dependencies",
      "pii_flag": false,
      "retention_period": "permanent",
      "provenance": "Derived from apache/airflow:2.7.3-python3.11 official image",
      "access_controls": "public",
      "update_frequency": "on_airflow_version_upgrade"
    },
    {
      "source_id": "DS005",
      "name": "Dockerfile.mcp",
      "type": "container_image_config",
      "location": "C:\\projects\\Work Projects\\ibm-projects\\ESG Evaluation\\prospecting-engine\\infrastructure\\Dockerfile.mcp",
      "size_estimate": "1 KB",
      "format": "dockerfile",
      "sha256": null,
      "description": "MCP server container image with FastAPI, uvicorn, and ESG evaluation application code",
      "pii_flag": false,
      "retention_period": "permanent",
      "provenance": "Derived from python:3.11-slim official image",
      "access_controls": "public",
      "update_frequency": "on_python_version_upgrade"
    },
    {
      "source_id": "DS006",
      "name": "setup-local.sh",
      "type": "automation_script",
      "location": "C:\\projects\\Work Projects\\ibm-projects\\ESG Evaluation\\prospecting-engine\\scripts\\setup-local.sh",
      "size_estimate": "3 KB",
      "format": "bash",
      "sha256": null,
      "description": "Automated local environment setup script (validates prerequisites, builds images, starts services, displays ngrok URL)",
      "pii_flag": false,
      "retention_period": "permanent",
      "provenance": "New script created for Phase 1 turnkey setup",
      "access_controls": "public",
      "update_frequency": "on_setup_process_change"
    },
    {
      "source_id": "DS007",
      "name": "test-local.sh",
      "type": "validation_script",
      "location": "C:\\projects\\Work Projects\\ibm-projects\\ESG Evaluation\\prospecting-engine\\scripts\\test-local.sh",
      "size_estimate": "2 KB",
      "format": "bash",
      "sha256": null,
      "description": "Service health validation script (tests postgres, redis, minio, iceberg, trino, airflow, mcp-server, ngrok)",
      "pii_flag": false,
      "retention_period": "permanent",
      "provenance": "New script created for Phase 1 validation",
      "access_controls": "public",
      "update_frequency": "on_service_addition"
    }
  ],
  "data_flow_diagram": {
    "description": "Configuration files orchestrate 9 Docker services with external cloud dependencies",
    "flow": [
      ".env.production → docker-compose.yml (env_file reference)",
      "docker-compose.yml → Dockerfile.airflow (build context)",
      "docker-compose.yml → Dockerfile.mcp (build context)",
      "requirements.txt → Dockerfile.* (pip install -r requirements.txt)",
      "setup-local.sh → docker-compose (docker-compose up -d)",
      "test-local.sh → running services (curl health checks)"
    ]
  },
  "security_classification": {
    "confidentiality": "CONFIDENTIAL",
    "integrity": "HIGH",
    "availability": "MEDIUM",
    "rationale": "Contains production API keys (IBM watsonx.ai, AstraDB, ngrok) in .env.production; compromise would expose cloud resources"
  },
  "compliance_notes": [
    "IBM Cloud API keys must be rotated every 90 days per IBM security policy",
    "AstraDB application tokens scoped to single keyspace (esg_vectors) with minimal permissions",
    "ngrok free tier tunnels have 2-hour session limit; pro tier recommended for production",
    "MCP_API_KEY must be 32+ characters (NIST SP 800-132 recommendation)"
  ],
  "prepared_by": "Scientific Coding Agent v13.8-MEA",
  "created_date": "2025-10-24"
}
