{
  "agent": "SCA",
  "protocol_version": "13.7",
  "status": "ok",
  "phase": "context",
  "task_id": "018-esg-query-synthesis",
  "AUTO": 2,
  "SAFE_MODE": "on",
  "DRY_RUN": "off",
  "tools_available": [
    "pytest",
    "pytest-cov",
    "hypothesis",
    "mypy",
    "lizard",
    "ruff",
    "interrogate",
    "bandit",
    "detect-secrets",
    "pip-audit",
    "python",
    "git"
  ],
  "cp_thresholds": {
    "coverage_line": 0.95,
    "coverage_branch": 0.95,
    "mypy_strict_errors_cp": 0,
    "lizard_ccn_max": 10,
    "lizard_cognitive_max": 15,
    "docs_coverage_cp": 0.95
  },
  "gates": {
    "workspace": "pending",
    "context": "pending",
    "tdd": "pending",
    "coverage_cp": "pending",
    "types_cp": "pending",
    "complexity": "pending",
    "docs_cp": "pending",
    "security": "pending",
    "hygiene": "pending",
    "authenticity_ast": "pending",
    "performance": "pending",
    "fuzz": "pending",
    "data_integrity": "pending",
    "traceability": "pending"
  },
  "cp_coverage": {
    "line": 0.0,
    "branch": 0.0
  },
  "deliverables": [],
  "validation_artifacts": [
    {
      "name": "Coverage",
      "artifact_path": "qa/coverage.xml"
    },
    {
      "name": "Mypy",
      "artifact_path": "qa/mypy.txt"
    },
    {
      "name": "Lizard",
      "artifact_path": "qa/lizard_report.txt"
    },
    {
      "name": "Docs",
      "artifact_path": "qa/interrogate.txt"
    },
    {
      "name": "Secrets",
      "artifact_path": "qa/secrets.json"
    },
    {
      "name": "Bandit",
      "artifact_path": "qa/bandit.json"
    },
    {
      "name": "PipAudit",
      "artifact_path": "qa/pip_audit.txt"
    }
  ],
  "run": {
    "run_id": "20251026-202630-6b21a0d3",
    "session_id": "prospecting-engine-f8b5eb29-a70e-40dc-83da-ee16876e61e7",
    "task_dir": "C:\\projects\\Work Projects\\ibm-projects\\ESG Evaluation\\prospecting-engine\\tasks\\018-esg-query-synthesis",
    "log": "qa\\run_log.txt",
    "manifest": "artifacts\\run_manifest.json",
    "events": "artifacts\\run_events.jsonl"
  },
  "next_actions": [],
  "memory_sync": {
    "canonical_spec": "",
    "write_to": "<TASK_DIR>\\artifacts\\memory_sync.json",
    "resume_hint": "load <TASK_DIR>\\artifacts\\state.json if present"
  }
}