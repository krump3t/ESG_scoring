{
  "task_id": "011-multi-source-phase2",
  "phase": "context",
  "sources": [
    {
      "source_id": "MOCK_PROVIDER_RESPONSES",
      "name": "Mock Provider Search Responses (Test Fixtures)",
      "type": "synthetic",
      "format": "python_objects",
      "location": "tests/crawler/fixtures/mock_providers.py",
      "sha256": "pending",
      "size_bytes": null,
      "pii_flag": false,
      "provenance": "Hand-crafted test fixtures for unit tests. No real API data.",
      "retention_policy": "Stored in version control, no expiration",
      "quality_notes": "100% synthetic data designed to test edge cases (empty lists, ties in priority_score, disabled providers, etc.). No data leakage from production systems."
    },
    {
      "source_id": "SEC_EDGAR_API_RESPONSES",
      "name": "SEC EDGAR API Responses (Integration Tests)",
      "type": "real_api",
      "format": "json",
      "location": "https://data.sec.gov/submissions/CIK0000320193.json",
      "sha256": "dynamic",
      "size_bytes": null,
      "pii_flag": false,
      "provenance": "Official SEC EDGAR API. Used in Phase 1, reused for Phase 2 integration tests to verify backward compatibility.",
      "retention_policy": "Fetched on-demand during integration tests (marked @pytest.mark.integration). Not cached to ensure fresh data.",
      "quality_notes": "Real API responses from SEC.gov. Rate limited to 10 req/sec per SEC policy. Integration tests verify Phase 1 provider works with Phase 2 crawler."
    },
    {
      "source_id": "HYPOTHESIS_GENERATED_CANDIDATES",
      "name": "Hypothesis-Generated SourceRef Lists (Property Tests)",
      "type": "synthetic",
      "format": "python_objects",
      "location": "tests/crawler/test_multi_source_crawler.py (property tests)",
      "sha256": "non_deterministic",
      "size_bytes": null,
      "pii_flag": false,
      "provenance": "Generated by Hypothesis library using st.lists(st.builds(SourceRef, ...)). Random but reproducible with fixed seed.",
      "retention_policy": "Ephemeral (generated during test execution, not persisted)",
      "quality_notes": "Property-based test data. Hypothesis generates random SourceRef objects with tier (1-3), priority_score (0-100), and other fields. Verifies prioritization algorithm works for ALL valid inputs, not just hand-picked examples."
    },
    {
      "source_id": "PHASE2_COVERAGE_ARTIFACTS",
      "name": "Phase 2 Coverage Reports (QA Artifacts)",
      "type": "derived",
      "format": "xml_and_html",
      "location": "tasks/011-multi-source-phase2/qa/coverage.xml, tasks/011-multi-source-phase2/qa/htmlcov/",
      "sha256": "pending",
      "size_bytes": null,
      "pii_flag": false,
      "provenance": "Generated by pytest-cov during test execution. Measures line and branch coverage on CP files (multi_source_crawler.py, ingestion_contracts.py).",
      "retention_policy": "Stored in task directory, committed to git. Immutable after snapshot save.",
      "quality_notes": "Coverage artifacts are deterministic given same code and tests. ≥95% coverage required by SCA v13.8 gate. Coverage limited to CP files via .coveragerc configuration."
    }
  ],
  "data_lineage": {
    "inputs": [
      "MOCK_PROVIDER_RESPONSES (unit tests)",
      "SEC_EDGAR_API_RESPONSES (integration tests)",
      "HYPOTHESIS_GENERATED_CANDIDATES (property tests)"
    ],
    "outputs": [
      "PHASE2_COVERAGE_ARTIFACTS (qa/coverage.xml, qa/htmlcov/)"
    ],
    "transformations": [
      "pytest executes tests → calls multi_source_crawler.py → generates coverage data",
      "pytest-cov analyzes executed code → generates coverage.xml + htmlcov/",
      "MEA validator parses coverage.xml → enforces ≥95% gate"
    ]
  },
  "leakage_guards": {
    "test_train_split": "N/A (deterministic algorithm, not ML model)",
    "data_isolation": "Unit tests use 100% mocked data. Integration tests call real SEC EDGAR API (read-only, no secrets). No circular dependencies (crawler never calls itself).",
    "reproducibility": "Mock fixtures are deterministic. Hypothesis tests use fixed seed (hypothesis.settings.derandomize=True). Integration tests fetch fresh API data (not cached)."
  },
  "metadata": {
    "created_by": "SCA v13.8-MEA",
    "created_date": "2025-10-24",
    "last_updated": "2025-10-24",
    "schema_version": "1.0"
  }
}
